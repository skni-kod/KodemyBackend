plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
    id "org.sonarqube" version "4.0.0.2929"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

springBoot.buildInfo()

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql'
    implementation 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.vavr:vavr:0.10.4'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-amqp:3.0.4'
    implementation 'org.springframework.cloud:spring-cloud-context:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.4'
    implementation 'org.opensearch.client:opensearch-rest-high-level-client:2.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    testImplementation 'junit:junit:4.13.1'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.spockframework:spock-spring:2.3-groovy-4.0'
    testImplementation 'org.apache.groovy:groovy-json:4.0.4'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.testcontainers:spock'
    testImplementation 'org.testcontainers:postgresql'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.18.3"
    }
}

sonarqube {
    properties {
        property "sonar.sources", "src/main/java/"
        property "sonar.tests", "src/test/groovy/"
        property "sonar.exclusions", "build/generated-sources/**"
        property "sonar.test.exclusions", "build/generated-test-sources/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    executionData.from = fileTree(buildDir).include("/jacoco/*.exec")
}

test {
    useJUnitPlatform()
    systemProperties = [
            'spring.config.location': 'classpath:/application.yml,classpath:/application-test.yml'
    ]

    finalizedBy jacocoTestReport
}
