server:
  port: 8080

spring:
  banner:
    location: classpath:banner.txt
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-root.xml
    contexts: prod
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: 6fbe33527fc7bce1820f
            clientSecret: 95ba6be1aacccd5547b19248d77b28bf492bde71
            redirectUri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
  rabbitmq:
    host: ${RABBITMQ_HOST}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    port: ${RABBITMQ_PORT}

springdoc:
  api-docs:
    path: /api/docs
  swagger-ui:
    path: /api/docs.html

kodemy:
  security:
    auth:
      loginUri: /api/oauth2/authorize
      callbackUri: /api/oauth2/callback/**
      logoutUri: /api/oauth2/logout
    cors:
      allowedUris:
        - localhost:${server.port}
    role:
      defaultRole: ROLE_USER
      privileges:
        ROLE_USER:
        ROLE_MODERATOR:
          - CAN_MODIFY_TECHNOLOGIES
          - CAN_APPROVED_MATERIAL
        ROLE_ADMIN:
          - CAN_MODIFY_TECHNOLOGIES
          - CAN_APPROVED_MATERIAL
          - CAN_AUTO_APPROVED_MATERIAL
          - CAN_GET_USERS
          - CAN_BANNING_USERS
          - CAN_ASSIGN_ROLES
        ROLE_SUPERADMIN:
          - CAN_MODIFY_TECHNOLOGIES
          - CAN_APPROVED_MATERIAL
          - CAN_AUTO_APPROVED_MATERIAL
          - CAN_GET_USERS
          - CAN_BANNING_USERS
          - CAN_ASSIGN_ROLES
          - CAN_REFRESH_CONFIG