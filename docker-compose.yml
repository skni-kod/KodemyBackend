version: '3.7'

services:
  api:
    build: .
    container_name: kodemy_api_dev
    profiles:
      - test
    restart: unless-stopped
    ports:
      - "8181:8080"
    networks:
      - lan
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    container_name: kodemy_postgres_dev
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kodemy
    ports:
      - "5435:5432"
    restart: always
    volumes:
      - postgres_dev:/var/lib/postgresql/data
      - ./sql:/sql
    networks:
      - lan

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: kodemy_rabbitmq_dev
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_dev:/var/lib/rabbitmq
    networks:
      - lan

  opensearch:
    image: opensearchproject/opensearch:2.8.0
    container_name: kodemy_opensearch_dev
    restart: always
    environment:
      - discovery.type=single-node
      - cluster.name=kodemy-cluster
      - "DISABLE_SECURITY_PLUGIN=true"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - opensearch_dev:/usr/share/opensearch/data
    networks:
      - lan

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.8.0
    container_name: kodemy_opensearch_dashboards_dev
    restart: always
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    ports:
      - "5601:5601"
    networks:
      - lan

networks:
  lan:

volumes:
  postgres_dev:
  rabbitmq_dev:
  opensearch_dev:
