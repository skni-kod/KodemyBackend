server:
  port: 8080

spring:
  application.name: kodemy-api-gateway
  cloud:
    gateway:
      routes:
        - id: oauth2_auth
          uri: ${network.routes.auth}
          predicates:
            - Path=/api/oauth2/**,/api/auth/**

        - id: search-materials
          uri: ${network.routes.search}
          predicates:
            - Path=/api/materials
            - Method=GET

        - id: materials-get
          uri: ${network.routes.backend}
          predicates:
            - Path=/api/materials/{materialId}/**
            - Method=GET

        - id: materials-post
          uri: ${network.routes.backend}
          predicates:
            - Path=/api/materials
            - Method=POST

        - id: users_roles
          uri: ${network.routes.auth}
          predicates:
            - Path=/api/users/**,/api/roles

        - id: tags_types_sections_categories_admin
          uri: ${network.routes.backend}
          predicates:
            - Path=/api/tags,/api/types,/api/sections,/api/categories/{categoryId},/api/admin/**

  security:
    oauth2:
      path:
        authorize: /api/oauth2/authorize
        callback: /api/oauth2/callback
        error: /
      client:
        redirectUri: "{baseUrl}${spring.security.oauth2.path.callback}/{registrationId}"
        registration:
          github:
            clientId: Ov23liqWT50Vtt0A0uIg
            clientSecret: 8d3b1c72e34f2077e433c46f0aea4b980c15226b
            redirectUri: ${spring.security.oauth2.client.redirectUri}
            scope:
              - user:email
              - read:user

management:
  endpoints:
    web:
      base-path: /api/actuator
      exposure:
        include:
          - health
          - info
  endpoint:
    health:
      show-details: always
      roles: CAN_USE_ACTUATOR
      show-components: always

network:
  routes:
    front: /
    auth: http://localhost:8081
    backend: http://localhost:8082
    search: http://localhost:8083
  databus:
    username: user
    password: password

logging:
  level:
    root: info
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: info
    org.springframework.cloud.gateway: trace